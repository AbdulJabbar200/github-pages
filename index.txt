<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Background Remover</title>
    <style>
        *{
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    font-family: Arial, Helvetica, sans-serif;
}

body{
    background: linear-gradient(to bottom right, #0f2027, #2c5364, #ff4e50);
    display: flex;
    min-height: 100vh;
    align-items: center;
    justify-content: center;
    width: 100%;
    color: #fff;
}


.container{
    text-align: center;
     padding: 30px;
    width: 90%;
    max-width: 500px;
    background-color: #e0f7fa;
    color: #333;
    border-radius: 10px;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1); 
}

h1{
    margin-bottom: 20px;
    font-size: 2em;
    color: #4a90e2;
}

.upload-area{
    background-color: #f3f3f3;
    border: 2px dashed #4a90e2;
    padding: 30px;
    border-radius:10px ;
    cursor: pointer;
    transition: 0.3s;
    margin: 20px;
}

.upload-area:hover{
    background:#e8f0ff;
    border-color: #904e95;
}


.upload-area p{
    color: #4a90e2;
    font-weight: bold;
}

button{
    background-color: #4a90e2;
    color: #fff;
    border: none;
    padding: 10px 20px;
    border-radius: 5px ;
    font-size: 1em;
    cursor: pointer;
    transition: 0.3s;
}
button:hover{
    background-color: #904e95;

}

.result{
    margin-top: 20px;
    padding: 15px;
    background: #f3f3f3;
    border-radius:10px ;
    color: #333;

}

.result img{
    width: 100%;
    max-width: 400px;
    border-radius:10px ;
}



    </style>
</head>
<body>
    <div class="container">
        <h1>Backgrounde Remover</h1>
        <div class="upload-area" id="upload-area">
            <p>Drag & Drop or click to upload image</p>
            <input type="file" id="imageInput" accept="image/*" hidden >
        </div>
        <div class="btns">
            <button class="btn" id="removeBackgroundBtn" > Remove Background</button>
            <button class="btn" id="resetBtn">Reset</button>
        </div>
        <div class="result" id="result">
            <p>No image processed yet</p>
        </div>
    </div>    


    <script >
        const uploadArea = document.getElementById("upload-area")
const imageInput = document.getElementById("imageInput")
const removeBackgroundButtont = document.getElementById("removeBackgroundBtn")
const resetBtn = document.getElementById("resetBtn")
const result = document.getElementById("result")
const container = document.getElementById("container")


let selectedFile = null;

uploadArea.addEventListener("click", () =>    imageInput.click())

uploadArea.addEventListener("drag", (e) => e.preventDefault());

uploadArea.addEventListener("drag", (e) =>{
    e.preventDefault();
    handdleFile(e.dataTransfer.files[0]);
});

imageInput.addEventListener("change", (e)=> handdleFile(e.target.files[0]));

function handdleFile(file){
    if(file && file.type.startsWith("image/")){
        selectedFile = file;
        const reader = new FileReader();
        reader.onload = () => displayImage(reader.result);
        reader.readAsDataURL(file)

    }else{
        alert("Please upload a valid image file");
    }
}


function displayImage(imageSrc){
    result.innerHTML = `<img src="${imageSrc}" alt="Orginal Image"> `;
}

removeBackgroundButtont.addEventListener("click", () =>{
    if(selectedFile){
        removeBackground(selectedFile);

    }else{
        alert("Please upload an image. ");
    }
})

async function removeBackground(file){
    const apiKey = "4619Gv38tVxP4yxLav7tcDk6";


    const formData = new FormData();
  formData.append("size", "auto");
  formData.append("image_file", file);


  result.innerHTML = "<p>Removing Background....</p>"
    try{
        const response = await fetch("https://api.remove.bg/v1.0/removebg", {
        method: "POST",
        headers: { "X-Api-Key": apiKey },
        body: formData,
        });
    
        if(!response.ok) throw new error("Field to remove background ");
        const blob = await response.blob ()
        const imageUrl = URL.createObjectURL(blob);
        
        result.innerHTML = `<img src="${imageUrl}" alt="Background Removed"> `;

        const downloadBtn = document.createElement("button");
        downloadBtn.innerText = "Download Png File";
        downloadBtn.classList.add("download-btn");
        downloadBtn.addEventListener("click", ()=>{
            const link = document.createElement("a");
            link.href = imageUrl;
            link.download = "background_removed.png";
            link.click();
        });
        result.appendChild(downloadBtn);
    
    }catch(error){
        console.error(error)
        result.innerHTML = "<p>Error removing background. Please try again!</p>";
    }
}

resetBtn.addEventListener("click", () =>{
    selectedFile = null;
    result.innerHTML = "<p>no Image processed yet!</p>";
    imageInput.value = ""
})
    </script>
    
</body>
</html>